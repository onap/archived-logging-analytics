<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.onap.logging-analytics</groupId>
    <artifactId>logging-reference</artifactId>
    <version>1.6.4-SNAPSHOT</version>
  </parent>

  <artifactId>logging-filter-parent</artifactId>
  <packaging>pom</packaging>

  <name>logging-analytics :: ${project.artifactId}</name>

  <modules>
    <module>logging-filter-base</module>
    <module>logging-filter-spring</module>
  </modules>

  <properties>
    <format.skipValidate>false</format.skipValidate>
    <format.skipExecute>true</format.skipExecute>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.2</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.onap.logging-analytics</groupId>
        <artifactId>logging-slf4j</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>3.1.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>2.0.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.25</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>2.11.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>2.15.0</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <!-- Plugin to identify root path of the project -->
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <version>0.2</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <id>directories</id>
            <goals>
              <goal>highest-basedir</goal>
            </goals>
            <configuration>
              <property>baseDirPath</property>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Plugin to Generate/Validate Copyright License header -->
      <!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>license-maven-plugin</artifactId> <version>1.20</version> <configuration> <processStartTag>============LICENSE_START=======================================================</processStartTag>
        <sectionDelimiter>================================================================================</sectionDelimiter> <processEndTag>============LICENSE_END=========================================================</processEndTag>
        <licenseName>apache_v2</licenseName> <inceptionYear>2019</inceptionYear> <organizationName>AT&amp;T Intellectual Property. All rights reserved.</organizationName> <projectName>ONAP
        - Logging</projectName> <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage> <skipUpdateLicense>${format.skipExecute}</skipUpdateLicense> <skipCheckLicense>${format.skipValidate}</skipCheckLicense>
        </configuration> <executions> <execution> <id>update-headers</id> <goals> <goal>update-file-header</goal> </goals> <phase>process-sources</phase> <configuration> <canUpdateCopyright>true</canUpdateCopyright>
        <canUpdateDescription>true</canUpdateDescription> <canUpdateLicense>true</canUpdateLicense> <emptyLineAfterHeader>true</emptyLineAfterHeader> </configuration> </execution> <execution>
        <id>check-headers</id> <goals> <goal>check-file-header</goal> </goals> <phase>validate</phase> <configuration> <failOnNotUptodateHeader>true</failOnNotUptodateHeader> <failOnMissingHeader>true</failOnMissingHeader>
        </configuration> </execution> </executions> </plugin> -->

      <!-- Plugin to Format/Validate Java Classes -->
      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
        <version>2.10.0</version>
        <executions>
          <execution>
            <id>format-java</id>
            <goals>
              <goal>format</goal>
            </goals>
            <phase>process-sources</phase>
            <configuration>
              <lineEnding>LF</lineEnding>
              <skip>${format.skipExecute}</skip>
              <sourceDirectory>${project.basedir}</sourceDirectory>
              <configFile>${baseDirPath}/project-configs/code-tools/onap-java-format.xml</configFile>
              <includes>
                <include>src/**/*.java</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>validate-java</id>
            <goals>
              <goal>validate</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <lineEnding>LF</lineEnding>
              <skip>${format.skipValidate}</skip>
              <sourceDirectory>${project.basedir}</sourceDirectory>
              <configFile>${baseDirPath}/project-configs/code-tools/onap-java-format.xml</configFile>
              <includes>
                <include>src/**/*.java</include>
              </includes>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.9.8</version>
          </dependency>
        </dependencies>
      </plugin>

      <!-- Plugin to Format/Validate POM Files -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>tidy-maven-plugin</artifactId>
        <version>1.1.0</version>
        <executions>
          <execution>
            <id>format-pom</id>
            <phase>process-sources</phase>
            <goals>
              <goal>pom</goal>
            </goals>
            <configuration>
              <skip>${format.skipExecute}</skip>
            </configuration>
          </execution>
          <execution>
            <id>validate-pom</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <skip>${format.skipValidate}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>format</id>
      <properties>
        <format.skipValidate>true</format.skipValidate>
        <format.skipExecute>false</format.skipExecute>
      </properties>
    </profile>
  </profiles>
</project>
